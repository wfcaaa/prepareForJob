1. 函数重载的定义：同一作用域里 函数名字相同 形参列表不同的一组函数。
   函数返回类型不同 其余部分相同的一组函数 不是函数重载！

2. 函数重载 与 const：
   a. 当形参为顶层const时，其他部分相同，不是函数重载：
   bool create(int i);
   bool create(const int i);

   b. 当形参为某种类型的指针或引用，可以通过区分其指向的对象是常量对象还是非常量对象来实现函数重载

   bool create(int * i);
   bool create(const int *i);
   or:
   bool create(int i);
   bool create(const int& i);
   
3. 顶层const和底层const：

   a.顶层const：以指针为例 指针本身是const 为顶层const。
   b.底层const：以指针为例 指针指向的对象是const 为底层cosnt， 对常量对象的引用也是底层const

4. 默认状态下const对象仅在本文件内有效：
   比如在file1.c 里有对象 const int lenth = 10；（const对象必须初始化） 编译器在编译的过程中会把文件中所以用到 lenth的地方替换成 10，
   要想在多个文件内共享const对象 可以在const对象声明和定义的文件里加上关键字 extern：
   //file1.c 定义并初始化一个const对象 
   extern const int a = 10；
   // file1.h 声明
   extern const int a；



